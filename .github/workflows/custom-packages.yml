name: Elsa Studio 3 Custom Packages
on:
  workflow_dispatch:
  push:
    branches:
      - v3-custom-nuget
  release:
    types: [ prereleased, published ]
env:
  AZURE_ARTIFACTS_FEED_URL: ${{ secrets.AZURE_ARTIFACTS_FEED_URL}}
  package_number_reference: ${{ vars.PACKAGE_NUMBER_REFERENCE }}
  nuget_feed_feedzio: 'https://f.feedz.io/elsa-workflows/elsa-3/nuget/index.json'
  nuget_feed_nuget: 'https://api.nuget.org/v3/index.json'
  npm_feed_feedzio: 'https://f.feedz.io/elsa-workflows/elsa-3/npm/'
  npm_feed_npm: 'https://registry.npmjs.org/'

jobs:
  build:
    name: Build packages
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # - name: Verify commit exists in origin/main
      #   run: |
      #     git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      #     git branch --remote --contains | grep origin/main
      - name: Set VERSION variable
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* && "${{ github.event_name }}" == "release" && "${{ github.event.action }}" == "published" ]]; then
            TAG_NAME=${{ github.ref }} # e.g., refs/tags/3.0.0
            TAG_NAME=${TAG_NAME#refs/tags/} # remove the refs/tags/ prefix
            echo "VERSION=${TAG_NAME}" >> $GITHUB_ENV
          else
            echo "VERSION=3.1.0-preview.${{env.package_number_reference}}.${{github.run_number}}" >> $GITHUB_ENV
          fi
      - name: Build workflow designer client assets
        working-directory: ./src/modules/Elsa.Studio.Workflows.Designer/ClientLib
        run: |
          npm install --force
          npm run build
      - name: Build DOM interop client assets
        working-directory: ./src/framework/Elsa.Studio.DomInterop/ClientLib
        run: |
          npm install --force
          npm run build
      # Setup .NET Core SDK
      - name: Add Custom Source
        shell: bash
        run: dotnet nuget add source ${{ env.AZURE_ARTIFACTS_FEED_URL }} --name "custom-feed" --username az --password ${{ secrets.AZURE_DEVOPS_PAT }} --store-password-in-clear-text
      - name: Build nuget packages
        run: dotnet build Elsa.Studio.sln --configuration Release /p:Version=${VERSION}
      - name: Test
        run: dotnet test Elsa.Studio.sln --configuration Release /p:Version=${VERSION} --no-build
      - name: Pack nuget packages
        run: dotnet pack Elsa.Studio.sln --configuration Release /p:Version=${VERSION} /p:PackageOutputPath=$(pwd)/packages/nuget
      - name: Publish Custom Elements packages # This generates client assets that we then package as an NPM package.
        run: dotnet publish ./src/hosts/Elsa.Studio.Host.CustomElements --configuration Release -o ./packages/wasm /p:Version=${VERSION} -f net7.0
      
      # Pack npm wasm package
      - name: Pack elsa-studio-wasm npm package
        run: |
          cp ./packages/wasm/npm/package.json ./packages/wasm/wwwroot/package.json # Copy the package.json file from the NPM package to the wwwroot folder.
          cd ./packages/wasm/wwwroot
          npm version $VERSION --allow-same-version
          npm pack
      
      # Build npm react wrapper package
      - name: Pack elsa-studio-wasm-react npm package
        run: |
          cd ./src/wrappers/wrappers/react-wrapper
          npm version $VERSION --allow-same-version
          npm run build
          npm pack
      
      # Upload nuget packages
      - name: Upload nuget packages
        uses: actions/upload-artifact@v3
        with:
          name: elsa-studio-nuget-packages
          path: ./packages/nuget/*nupkg
      


  publish_custom_feed:
    name: Publish to custom feed
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event_name == 'release' || github.event_name == 'push'}}
    steps:
      - name: Download Packages
        uses: actions/download-artifact@v3
        with:
          name: elsa-studio-nuget-packages
          path: elsa-studio-nuget-packages
      
      - uses: actions/setup-dotnet@v3
        with:
          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{secrets.AZURE_DEVOPS_PAT}}
      - name: Publish to custom feed
        run: dotnet nuget push ./elsa-studio-nuget-packages/*.nupkg --api-key AureArtifacts --skip-duplicate